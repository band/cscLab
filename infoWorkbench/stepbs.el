(defun process-region ()
  (interactive)
  (let ((start (region-beginning))
        (end (region-end)))
    (save-excursion
      (narrow-to-region start end)
      (let ((line2 nil)
            (line3 nil))
	(goto-char (point-min))
	(forward-line 1)
	(setq line2 (buffer-substring (point) (line-end-position)))
	(delete-region (point) (line-end-position))
	(forward-line 1)
	(setq line3 (buffer-substring (point) (line-end-position)))
	(delete-region (point) (line-end-position))
	(goto-char end)
	(insert line2 "\n" line3 "\n"))
      (widen))
    (save-excursion
      (narrow-to-region start end)
      (goto-char (point-min))
      (flush-lines "^\\s-*$")
      (while (re-search-forward "\\*\\*" end t)
        (replace-match ""))
      (widen))
    (save-excursion
      (save-restriction
	(narrow-to-region start end)
	(goto-char (point-min))
	(while (and (< (point) end) (not (eobp)))
	  (end-of-line)
	  (delete-horizontal-space t)
	  (forward-line 1))))

    )
  )
